/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as c from "react";
import * as b from "react-dom";
import * as E from "react-dom/client";
import { exportElement as x } from "./export-element.mjs";
function D(o) {
  return (e, s = {}, d, t, i) => g(
    o,
    e,
    s,
    d,
    t,
    i
  );
}
function g(o, e, s = {}, d, t, i) {
  let n, p, r;
  f();
  function f() {
    n = document.createElement("div"), n.setAttribute("style", "position:absolute; left: -5000px; top: 0px;"), p = document.createElement("div"), n.appendChild(p), document.body.appendChild(n), Number(c.version.slice(0, 2)) >= 18 ? (E.createRoot(p).render(m()), setTimeout(() => {
      a();
    }, 0)) : b.render(m(), p, a);
  }
  function a() {
    o(h(), s, C);
  }
  function C() {
    document.body.removeChild(n), document.body.removeChild(r), n = r = void 0, d && d();
  }
  function h() {
    r = document.createElement("div"), r.className = "k-grid-pdf-export-element";
    const l = x(p);
    return r.appendChild(l), document.body.appendChild(r), l;
  }
  function m() {
    const l = t && { data: t, total: t.length, pageSize: t.length, skip: 0 }, y = { style: Object.assign({}, e.props.style, { width: "1000px" }) }, u = Object.assign({}, l, y);
    if (i && i.length > 0) {
      const v = G(e);
      return c.cloneElement(e, u, i.concat(v));
    } else
      return c.cloneElement(e, u);
  }
}
function G(o) {
  return c.Children.toArray(o.props.children).filter((e) => e && e.type && e.type.displayName !== "KendoReactGridColumn");
}
export {
  D as provideSaveGridPDF
};
