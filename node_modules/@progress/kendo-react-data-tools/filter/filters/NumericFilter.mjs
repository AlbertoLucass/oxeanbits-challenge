/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import s from "prop-types";
import { NumericTextBox as m } from "@progress/kendo-react-inputs";
import { provideLocalizationService as u, registerForLocalization as c } from "@progress/kendo-react-intl";
import { filterNumericFilterAriaLabel as l, messages as h } from "../../messages/index.mjs";
const t = class t extends n.Component {
  constructor() {
    super(...arguments), this.onChange = (e) => {
      this.props.onFilterChange.call(void 0, {
        nextFilter: { ...this.props.filter, value: e.value }
      });
    };
  }
  /**
   * @hidden
   */
  render() {
    const e = u(this), {
      min: i,
      max: o,
      filter: a,
      ariaLabel: p = e.toLanguageString(l, h[l])
    } = this.props;
    return /* @__PURE__ */ n.createElement(
      m,
      {
        value: typeof a.value == "number" ? a.value : null,
        onChange: this.onChange,
        ariaLabel: p,
        "aria-valuemin": i,
        "aria-valuemax": o,
        min: i,
        max: o
      }
    );
  }
};
t.propTypes = {
  filter: s.object.isRequired,
  onFilterChange: s.func.isRequired
};
let r = t;
c(r);
export {
  r as NumericFilter
};
