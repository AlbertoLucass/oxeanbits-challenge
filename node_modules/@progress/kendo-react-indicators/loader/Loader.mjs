/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as r from "react";
import s from "prop-types";
import { validatePackage as y, classNames as v } from "@progress/kendo-react-common";
import { packageMetadata as C } from "../package-metadata.mjs";
const d = {
  pulsing: 2,
  "infinite-spinner": 3,
  "converging-spinner": 4
}, h = {
  pulsing: "k-loader-pulsing-2",
  "infinite-spinner": "k-loader-spinner-3",
  "converging-spinner": "k-loader-spinner-4"
}, i = r.forwardRef((a, p) => {
  y(C);
  const {
    className: m,
    style: u
  } = a, t = r.useRef(null), k = r.useCallback(
    () => {
      t.current && t.current.focus();
    },
    []
  );
  r.useImperativeHandle(p, () => ({
    element: t.current,
    focus: k
  }));
  const n = r.useMemo(
    () => a.size || l.size,
    [a.size]
  ), e = r.useMemo(
    () => a.themeColor || l.themeColor,
    [a.themeColor]
  ), o = r.useMemo(
    () => a.type || l.type,
    [a.type]
  ), f = r.useMemo(
    () => v(
      "k-loader",
      {
        "k-loader-sm": n === "small",
        "k-loader-md": n === "medium",
        "k-loader-lg": n === "large",
        "k-loader-primary": e === "primary",
        "k-loader-secondary": e === "secondary",
        "k-loader-tertiary": e === "tertiary",
        "k-loader-info": e === "info",
        "k-loader-success": e === "success",
        "k-loader-warning": e === "warning",
        "k-loader-error": e === "error",
        "k-loader-dark": e === "dark",
        "k-loader-light": e === "light",
        "k-loader-inverse": e === "inverse"
      },
      m,
      h[o]
    ),
    [
      n,
      e,
      m,
      o
    ]
  ), c = new Array(d[o]);
  return c.fill(0, 0, d[o]), /* @__PURE__ */ r.createElement("div", { className: f, style: u }, /* @__PURE__ */ r.createElement("div", { className: "k-loader-canvas" }, c.map((N, g) => /* @__PURE__ */ r.createElement("span", { key: g, className: "k-loader-segment" }))));
});
i.propTypes = {
  className: s.string,
  style: s.object,
  type: s.oneOf([
    "pulsing",
    "infinite-spinner",
    "converging-spinner"
  ]),
  size: s.oneOf(["small", "medium", "large"]),
  themeColor: s.oneOf([
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ])
};
const l = {
  size: "medium",
  themeColor: "primary",
  type: "pulsing"
};
i.defaultProps = l;
i.displayName = "KendoLoader";
export {
  i as Loader
};
